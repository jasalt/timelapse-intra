- hosts: raspberry
  user: pi
  gather_facts: False
  tasks:
  - name: Install fswebcam and curl
    sudo: yes
    apt: pkg={{ item }} state=installed
    with_items:
      - fswebcam
      - curl
      - python-pip
      - python-dev
  - name: Install ephem pip dependency.
    sudo: yes
    pip: name=ephem
  - name: Copy its_not_dark.py script into place
    copy: src=scripts/capture/its_not_dark.py dest=/home/pi/webcam/its_not_dark.py mode=a+rwx
    tags:
      - script
  - name: Copy capture script into place
    copy: force=yes src=scripts/capture/snap-archive.sh dest=/home/pi/webcam/snap-archive.sh mode=a+rwx
    tags:
      - script
  - name: Set CRON tasks for capturing and to cleanup empty dirs daily
    copy: src=scripts/capture/capture.cron dest=/home/pi/cronfile
    register: result
    tags: script
  - name: Activate crontab file
    shell: crontab /home/pi/cronfile
    tags: script

  # TODO: Set CRON to alert if space is running out
  #   cron: name="Monitor disk usage" minute="*/5" job="curl -X POST -H 'Authorization: Bearer '{{ lookup('env', 'PB_KEY') }} "https://api.pushbullet.com/v2/pushes" --header 'Content-Type: application/json' --data-binary '{"type": "note", "title": "'`hostname`'", "body": "'Space is running out!'"}'"

- hosts: kitchen
  user: jarkko
  sudo_user: root
  gather_facts: True
  # vars_files:
  #   #- vars/defaults.yml
  #   #- vars/user.yml
  tasks:
  - name: Setup general utilities
    sudo: yes
    apt: pkg={{ item }} state=installed
    with_items:
      - screen
      - mg
      - curl
      - python-pip
      - python-dev
    tags: deps
  - name: Add ~/bin directory and add to path
    file: path=/home/jarkko/bin/ state=directory mode=0755
    environment:
      PATH: /home/jarkko/bin:{{ ansible_env.PATH }}
  - name: Copy ngrok binary to ~/bin
    copy: src=scripts/bin/ngrok dest=/home/jarkko/bin/ngrok mode=u+rwx
# - name: Set ngrok to start on
  - name: Add pywws livelogger autostart to crontab
    cron: name="Run pywws on reboot" special_time=reboot job="/home/jarkko/bin/ngrok tcp 22"
    tags: ngrok

  # Weather station setup
  - name: Setup PyWWS pip dependencies
    sudo: yes
    pip: name={{ item }}
    with_items:
      - tzlocal
      - python-daemon
      - libusb1
      - pywws
    tags: pywws
  # Udev rule setup
  - name: Set Weather Station usage udev rule for group weatherstation (REBOOT TO ACTIVATE!)
    copy: src=scripts/weatherstation/39-weather-station.rules dest=/etc/udev/rules.d/ mode=u+rwx
    sudo: true
    tags: pywws
  - name: Add group for weatherstation users
    group: name=weatherstation state=present
    sudo: true
    tags: pywws
  - name: Add current user to group
    user: name=jarkko groups=weatherstation append=yes
    sudo: true
    tags: pywws
  - name: Try applying udev rule for connected usb device (reboot if pywws-testweatherstation does not work afterwards)
    sudo: true
    shell: udevadm trigger --attr-match=subsystem=usb
    tags: pywws

  - name: Create ~/pywws/ dir
    file: path=~/pywws/temp state=directory mode=0755
    tags: pywws
  - name: Initialize pywws template files
    shell: python -m pywws.LogData -vvv ~/pywws/
    args:
      # Should not run if this path exists
      creates: ~/pywws/weather.ini
    tags: pywws
  - name: Create weatherstation setup file
    template: src=scripts/weatherstation/weather.j2 dest=~/pywws/weather.ini group=weatherstation owner=jarkko mode="u=rw,g=rw,o=r"
    tags: pywws

  - name: Copy livelog runner script into place
    copy: src=scripts/weatherstation/run_pywws.sh dest=/home/jarkko/bin/run_pywws.sh mode=u+rwx
    tags: pywws

  - name: Add pywws livelogger autostart to crontab
    cron: name="Run pywws on reboot" special_time=reboot job="/home/jarkko/bin/run_pywws.sh"
    tags: pywws

  # Webcam image processing
  - name: Create workdir for webcam image processing
    file: path={{ ansible_env.HOME }}/timelapse/days state=directory mode=0755
  - name: Set CRON to fetch daily images from raspberry
    cron: name="Fetch raspberry images" minute="15" hour="0" job="rsync --remove-source-files -av pi@192.168.1.20:~/webcam/photos/* {{ ansible_env.HOME }}/timelapse/days/" backup=yes
